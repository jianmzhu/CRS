<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.crs.reserve.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="cn.crs.reserve.entity.SysUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_weixin" jdbcType="VARCHAR" property="userWeixin" />
    <result column="user_qq" jdbcType="VARCHAR" property="userQq" />
    <result column="user_jobno" jdbcType="VARCHAR" property="userJobno" />
    <result column="user_post" jdbcType="VARCHAR" property="userPost" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="is_lock" jdbcType="INTEGER" property="isLock" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.crs.reserve.entity.SysUser">
    <result column="user_description" jdbcType="LONGVARCHAR" property="userDescription" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, user_password, user_phone, user_email, user_weixin, user_qq, 
    user_jobno, user_post, create_time, update_time, status, is_lock
  </sql>
  <sql id="Blob_Column_List">
    user_description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.crs.reserve.entity.SysUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.crs.reserve.entity.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.crs.reserve.entity.SysUserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.crs.reserve.entity.SysUser">
    insert into t_user (user_id, user_name, user_password, 
      user_phone, user_email, user_weixin, 
      user_qq, user_jobno, user_post, 
      create_time, update_time, status, 
      is_lock, user_description)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userWeixin,jdbcType=VARCHAR}, 
      #{userQq,jdbcType=VARCHAR}, #{userJobno,jdbcType=VARCHAR}, #{userPost,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{isLock,jdbcType=INTEGER}, #{userDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.crs.reserve.entity.SysUser">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userWeixin != null">
        user_weixin,
      </if>
      <if test="userQq != null">
        user_qq,
      </if>
      <if test="userJobno != null">
        user_jobno,
      </if>
      <if test="userPost != null">
        user_post,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isLock != null">
        is_lock,
      </if>
      <if test="userDescription != null">
        user_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userWeixin != null">
        #{userWeixin,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null">
        #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userJobno != null">
        #{userJobno,jdbcType=VARCHAR},
      </if>
      <if test="userPost != null">
        #{userPost,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isLock != null">
        #{isLock,jdbcType=INTEGER},
      </if>
      <if test="userDescription != null">
        #{userDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.crs.reserve.entity.SysUserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userWeixin != null">
        user_weixin = #{record.userWeixin,jdbcType=VARCHAR},
      </if>
      <if test="record.userQq != null">
        user_qq = #{record.userQq,jdbcType=VARCHAR},
      </if>
      <if test="record.userJobno != null">
        user_jobno = #{record.userJobno,jdbcType=VARCHAR},
      </if>
      <if test="record.userPost != null">
        user_post = #{record.userPost,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isLock != null">
        is_lock = #{record.isLock,jdbcType=INTEGER},
      </if>
      <if test="record.userDescription != null">
        user_description = #{record.userDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_weixin = #{record.userWeixin,jdbcType=VARCHAR},
      user_qq = #{record.userQq,jdbcType=VARCHAR},
      user_jobno = #{record.userJobno,jdbcType=VARCHAR},
      user_post = #{record.userPost,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      is_lock = #{record.isLock,jdbcType=INTEGER},
      user_description = #{record.userDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_weixin = #{record.userWeixin,jdbcType=VARCHAR},
      user_qq = #{record.userQq,jdbcType=VARCHAR},
      user_jobno = #{record.userJobno,jdbcType=VARCHAR},
      user_post = #{record.userPost,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      is_lock = #{record.isLock,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.crs.reserve.entity.SysUser">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userWeixin != null">
        user_weixin = #{userWeixin,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null">
        user_qq = #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userJobno != null">
        user_jobno = #{userJobno,jdbcType=VARCHAR},
      </if>
      <if test="userPost != null">
        user_post = #{userPost,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isLock != null">
        is_lock = #{isLock,jdbcType=INTEGER},
      </if>
      <if test="userDescription != null">
        user_description = #{userDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.crs.reserve.entity.SysUser">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_weixin = #{userWeixin,jdbcType=VARCHAR},
      user_qq = #{userQq,jdbcType=VARCHAR},
      user_jobno = #{userJobno,jdbcType=VARCHAR},
      user_post = #{userPost,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      is_lock = #{isLock,jdbcType=INTEGER},
      user_description = #{userDescription,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.crs.reserve.entity.SysUser">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_weixin = #{userWeixin,jdbcType=VARCHAR},
      user_qq = #{userQq,jdbcType=VARCHAR},
      user_jobno = #{userJobno,jdbcType=VARCHAR},
      user_post = #{userPost,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      is_lock = #{isLock,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <!-- 与Post表联查结果 一对多关系 -->
	<resultMap type="cn.crs.reserve.entity.SysUser" id="resultSysUser">
		<id column="user_id" jdbcType="INTEGER" property="userId" />
	    <result column="user_name" jdbcType="VARCHAR" property="userName" />
	    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
	    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
	    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
	    <result column="user_weixin" jdbcType="VARCHAR" property="userWeixin" />
	    <result column="user_qq" jdbcType="VARCHAR" property="userQq" />
	    <result column="user_jobno" jdbcType="VARCHAR" property="userJobno" />
	    <result column="user_post" jdbcType="VARCHAR" property="userPost" />
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	    <result column="status" jdbcType="INTEGER" property="status" />
	    <result column="is_lock" jdbcType="INTEGER" property="isLock" />
		<!-- property="sysRoles" 对应SysRole POJO里面的属性名， ofType="cn.crs.reserve.entity.SysRole" 对应类， column="role_id"对应post表中的person_id建，与t_role表的role_id做关联 -->
		<!-- collection表示多的一方，在一的一方有list参数 -->
		<collection property="sysRoles" ofType="cn.crs.reserve.entity.SysRole" column="role_id">
			<!-- 下述的键可以简化不需要javaType，jdbcType -->
			<id property="role_id" column="role_id" javaType="int" jdbcType="INTEGER" />
			<result property="role_name" column="role_name" javaType="string"
				jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	
	<select id="getUserInfoById" resultMap="resultSysUser" parameterType="int">
		select x1.user_id,x1.user_name,x1.user_password,x1.user_phone,x1.user_email,
		x1.user_weixin,x1.user_qq,x1.user_jobno,x1.user_post,x1.create_time,x1.update_time,
		x1.status,x1.is_lock,x3.role_id,x3.role_name
		from t_user x1
		left join t_user_role_relat x2 on x2.user_id = x1.user_id
		left join t_role x3 on x3.role_id = x2.role_id
		where x1.user_id=#{id} 
  	</select>
</mapper>