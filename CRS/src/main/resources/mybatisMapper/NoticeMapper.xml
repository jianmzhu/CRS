<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.crs.reserve.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="cn.crs.reserve.entity.Notice">
    <id column="notice_id" jdbcType="INTEGER" property="noticeId" />
    <result column="notice_name" jdbcType="VARCHAR" property="noticeName" />
    <result column="notice_type" jdbcType="VARCHAR" property="noticeType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.crs.reserve.entity.Notice">
    <result column="notice_description" jdbcType="LONGVARCHAR" property="noticeDescription" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    notice_id, notice_name, notice_type, create_time, update_time, is_del
  </sql>
  <sql id="Blob_Column_List">
    notice_description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.crs.reserve.entity.NoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.crs.reserve.entity.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_notice
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_notice
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.crs.reserve.entity.NoticeExample">
    delete from t_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.crs.reserve.entity.Notice">
    insert into t_notice (notice_id, notice_name, notice_type, 
      create_time, update_time, is_del, 
      notice_description)
    values (#{noticeId,jdbcType=INTEGER}, #{noticeName,jdbcType=VARCHAR}, #{noticeType,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=INTEGER}, 
      #{noticeDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.crs.reserve.entity.Notice">
    insert into t_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="noticeName != null">
        notice_name,
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="noticeDescription != null">
        notice_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="noticeName != null">
        #{noticeName,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="noticeDescription != null">
        #{noticeDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.crs.reserve.entity.NoticeExample" resultType="java.lang.Long">
    select count(*) from t_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_notice
    <set>
      <if test="record.noticeId != null">
        notice_id = #{record.noticeId,jdbcType=INTEGER},
      </if>
      <if test="record.noticeName != null">
        notice_name = #{record.noticeName,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeType != null">
        notice_type = #{record.noticeType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.noticeDescription != null">
        notice_description = #{record.noticeDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_notice
    set notice_id = #{record.noticeId,jdbcType=INTEGER},
      notice_name = #{record.noticeName,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=INTEGER},
      notice_description = #{record.noticeDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_notice
    set notice_id = #{record.noticeId,jdbcType=INTEGER},
      notice_name = #{record.noticeName,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.crs.reserve.entity.Notice">
    update t_notice
    <set>
      <if test="noticeName != null">
        notice_name = #{noticeName,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        notice_type = #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="noticeDescription != null">
        notice_description = #{noticeDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.crs.reserve.entity.Notice">
    update t_notice
    set notice_name = #{noticeName,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER},
      notice_description = #{noticeDescription,jdbcType=LONGVARCHAR}
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.crs.reserve.entity.Notice">
    update t_notice
    set notice_name = #{noticeName,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER}
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
  
  <!-- 自定义SQL查询 -->
  <!-- 查询通知 -->
	<select id="findNoticeByType" resultType="cn.crs.reserve.entity.Notice">
		SELECT
		* FROM `t_notice`
		where is_del = 0 limit #{start},#{size}
	</select>
	
	<!-- 查询通知的数量 -->
	<select id="countNoticeByTypeNum" resultType="java.lang.Integer">
		SELECT
		COUNT(*) FROM `t_notice`
		where is_del = 0
	</select>
	<!-- 查询通知 -->
	<select id="findNoticeById" resultType="cn.crs.reserve.entity.Notice">
		SELECT
		* FROM `t_notice`
		where notice_id = #{id}
	</select>
</mapper>